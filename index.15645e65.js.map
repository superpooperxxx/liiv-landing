{"mappings":"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","sources":["<anon>","src/script.js","src/scripts/SplitText.js"],"sourcesContent":["(function () {\nclass $8af299d6ef1bf8bd$export$bd0fa428528371b2 {\n    chars = [];\n    constructor(selector){\n        const element = document.querySelector(selector);\n        const initialText = element.innerText.split(\"\");\n        element.innerText = \"\";\n        if (element) initialText.forEach((char)=>{\n            const span = document.createElement(\"span\");\n            span.textContent = char;\n            span.style.display = \"inline-block\";\n            this.chars.push(span);\n            element.appendChild(span);\n        });\n    }\n} // export class SplitText2 {\n //   chars = [];\n //   words = [];\n //   lines = [];\n //   constructor(selector, { type }) {\n //     const element = document.querySelector(selector);\n //     const initialText = element.innerText;\n //     const types = type.split(\",\");\n //     element.innerText = \"\";\n //     if (types.includes(\"lines\")) {\n //       initialText.split(\"\\n\").forEach((line) => {\n //         const span = document.createElement(\"span\");\n //         span.textContent = line;\n //         span.style.display = \"block\";\n //         this.lines.push(span);\n //       });\n //     }\n //     // if (types.includes(\"words\")) {\n //     // }\n //   }\n // }\n\n\ngsap.registerPlugin(ScrollTrigger);\n// LENIS\nconst $81cdcb03b6ee87e9$var$lenis = new Lenis({\n    lerp: 0.05\n});\nfunction $81cdcb03b6ee87e9$var$raf(time) {\n    $81cdcb03b6ee87e9$var$lenis.raf(time);\n    requestAnimationFrame($81cdcb03b6ee87e9$var$raf);\n}\nrequestAnimationFrame($81cdcb03b6ee87e9$var$raf);\n// HERO\nconst $81cdcb03b6ee87e9$var$housingWordChars = new (0, $8af299d6ef1bf8bd$export$bd0fa428528371b2)(\".hero-title__word--housing\").chars;\nconst $81cdcb03b6ee87e9$var$authorityWordChars = new (0, $8af299d6ef1bf8bd$export$bd0fa428528371b2)(\".hero-title__word--authority\").chars;\nconst $81cdcb03b6ee87e9$var$managementWordChars = new (0, $8af299d6ef1bf8bd$export$bd0fa428528371b2)(\".hero-title__word--management\").chars;\nconst $81cdcb03b6ee87e9$var$softwareWordChars = new (0, $8af299d6ef1bf8bd$export$bd0fa428528371b2)(\".hero-title__word--software\").chars;\nconst $81cdcb03b6ee87e9$var$heroTitleWords = [\n    $81cdcb03b6ee87e9$var$housingWordChars,\n    $81cdcb03b6ee87e9$var$authorityWordChars,\n    $81cdcb03b6ee87e9$var$managementWordChars,\n    $81cdcb03b6ee87e9$var$softwareWordChars\n];\ngsap.set($81cdcb03b6ee87e9$var$heroTitleWords, {\n    yPercent: 100\n});\ngsap.set(\".hero__text\", {\n    opacity: 0,\n    y: 10\n});\ngsap.set(\".hero__tags\", {\n    opacity: 0,\n    y: 10\n});\ngsap.set(\".hero__dashboard\", {\n    opacity: 0,\n    y: 40\n});\ngsap.timeline({\n    onStart: ()=>{\n        $81cdcb03b6ee87e9$var$lenis.stop();\n    },\n    onComplete: ()=>{\n        $81cdcb03b6ee87e9$var$lenis.start();\n    }\n}).to($81cdcb03b6ee87e9$var$heroTitleWords, {\n    yPercent: 0,\n    stagger: 0.05,\n    duration: 1,\n    ease: \"back.out\"\n}).to(\".hero__text\", {\n    opacity: 1,\n    y: 0,\n    ease: \"power3.out\",\n    duration: 1\n}).to(\".hero__tags\", {\n    opacity: 1,\n    y: 0,\n    ease: \"back.out\",\n    duration: 1\n}, \"<\").to(\".hero__dashboard\", {\n    opacity: 1,\n    y: 0,\n    ease: \"back.out\",\n    duration: 1\n}, \"<\");\n// AFFORDABLE\nconst $81cdcb03b6ee87e9$var$affordableLinePath = document.querySelector(\".affordable-line > path\");\nconst $81cdcb03b6ee87e9$var$affordableLinePathLength = $81cdcb03b6ee87e9$var$affordableLinePath.getTotalLength();\ngsap.set(\".affordable-line\", {\n    opacity: 0,\n    strokeDasharray: $81cdcb03b6ee87e9$var$affordableLinePathLength,\n    strokeDashoffset: $81cdcb03b6ee87e9$var$affordableLinePathLength\n});\ngsap.timeline({\n    scrollTrigger: {\n        trigger: \".affordable-line\",\n        start: \"top 70%\"\n    }\n}).to(\".affordable-line\", {\n    opacity: 1,\n    duration: 0\n}).to(\".affordable-line\", {\n    strokeDashoffset: 0,\n    duration: 1\n});\n// THE PROBLEM\nconst $81cdcb03b6ee87e9$var$problemParagraph1chars = new (0, $8af299d6ef1bf8bd$export$bd0fa428528371b2)(\".the-problem__paragraph--1\").chars;\nconst $81cdcb03b6ee87e9$var$problemParagraph2chars = new (0, $8af299d6ef1bf8bd$export$bd0fa428528371b2)(\".the-problem__paragraph--2\").chars;\ngsap.set($81cdcb03b6ee87e9$var$problemParagraph1chars, {\n    opacity: 0.05\n});\ngsap.set($81cdcb03b6ee87e9$var$problemParagraph2chars, {\n    opacity: 0.05\n});\ngsap.timeline({\n    scrollTrigger: {\n        trigger: \".the-problem__text\",\n        start: \"top 50%\",\n        end: \"bottom 50%\",\n        scrub: 0.5\n    }\n}).to($81cdcb03b6ee87e9$var$problemParagraph1chars, {\n    opacity: 1,\n    stagger: 0.01\n}).to($81cdcb03b6ee87e9$var$problemParagraph2chars, {\n    opacity: 1,\n    stagger: 0.01\n});\n// METRICS\ngsap.set(gsap.utils.toArray(\".metrics__cards > li\"), {\n    opacity: 0,\n    y: 60\n});\ngsap.timeline({\n    scrollTrigger: {\n        trigger: \".metrics\",\n        endTrigger: \".metrics__cards\",\n        start: \"top center\",\n        end: \"bottom center\",\n        scrub: true\n    }\n}).to(gsap.utils.toArray(\".metrics__cards > li\"), {\n    opacity: 1,\n    y: 0,\n    stagger: 0.1\n});\n// PROBLEM SOLUTION LINE\nconst $81cdcb03b6ee87e9$var$problemSolutionLinePath = document.querySelector(\".problem-solution-line-path\");\nconst $81cdcb03b6ee87e9$var$problemSolutionLinePathLength = $81cdcb03b6ee87e9$var$problemSolutionLinePath.getTotalLength();\ngsap.set($81cdcb03b6ee87e9$var$problemSolutionLinePath, {\n    opacity: 0,\n    strokeDasharray: $81cdcb03b6ee87e9$var$problemSolutionLinePathLength,\n    strokeDashoffset: $81cdcb03b6ee87e9$var$problemSolutionLinePathLength\n});\ngsap.timeline({\n    scrollTrigger: {\n        trigger: $81cdcb03b6ee87e9$var$problemSolutionLinePath,\n        start: \"top center\",\n        end: \"bottom center\",\n        scrub: true\n    }\n}).to($81cdcb03b6ee87e9$var$problemSolutionLinePath, {\n    opacity: 1,\n    duration: 0\n}).to($81cdcb03b6ee87e9$var$problemSolutionLinePath, {\n    strokeDashoffset: 0\n});\n// OUR SOLUTION\ngsap.set(gsap.utils.toArray(\".our-solution__cards > li\"), {\n    opacity: 0,\n    y: 60\n});\ngsap.timeline({\n    scrollTrigger: {\n        trigger: \".our-solution\",\n        endTrigger: \".our-solution__cards\",\n        start: \"top center\",\n        end: \"bottom center\",\n        scrub: true\n    }\n}).to(gsap.utils.toArray(\".our-solution__cards > li\"), {\n    opacity: 1,\n    y: 0,\n    stagger: 0.1\n});\n\n})();\n//# sourceMappingURL=index.15645e65.js.map\n","import { SplitText, SplitText2 } from \"./scripts/SplitText\";\n\ngsap.registerPlugin(ScrollTrigger);\n\n// LENIS\nconst lenis = new Lenis({\n  lerp: 0.05,\n});\n\nfunction raf(time) {\n  lenis.raf(time);\n  requestAnimationFrame(raf);\n}\n\nrequestAnimationFrame(raf);\n\n// HERO\nconst housingWordChars = new SplitText(\".hero-title__word--housing\").chars;\nconst authorityWordChars = new SplitText(\".hero-title__word--authority\").chars;\nconst managementWordChars = new SplitText(\".hero-title__word--management\")\n  .chars;\nconst softwareWordChars = new SplitText(\".hero-title__word--software\").chars;\n\nconst heroTitleWords = [\n  housingWordChars,\n  authorityWordChars,\n  managementWordChars,\n  softwareWordChars,\n];\n\ngsap.set(heroTitleWords, {\n  yPercent: 100,\n});\n\ngsap.set(\".hero__text\", {\n  opacity: 0,\n  y: 10,\n});\n\ngsap.set(\".hero__tags\", {\n  opacity: 0,\n  y: 10,\n});\n\ngsap.set(\".hero__dashboard\", {\n  opacity: 0,\n  y: 40,\n});\n\ngsap\n  .timeline({\n    onStart: () => {\n      lenis.stop();\n    },\n    onComplete: () => {\n      lenis.start();\n    },\n  })\n  .to(heroTitleWords, {\n    yPercent: 0,\n    stagger: 0.05,\n    duration: 1,\n    ease: \"back.out\",\n  })\n  .to(\".hero__text\", {\n    opacity: 1,\n    y: 0,\n    ease: \"power3.out\",\n    duration: 1,\n  })\n  .to(\n    \".hero__tags\",\n    {\n      opacity: 1,\n      y: 0,\n      ease: \"back.out\",\n      duration: 1,\n    },\n    \"<\"\n  )\n  .to(\n    \".hero__dashboard\",\n    {\n      opacity: 1,\n      y: 0,\n      ease: \"back.out\",\n      duration: 1,\n    },\n    \"<\"\n  );\n\n// AFFORDABLE\nconst affordableLinePath = document.querySelector(\".affordable-line > path\");\nconst affordableLinePathLength = affordableLinePath.getTotalLength();\n\ngsap.set(\".affordable-line\", {\n  opacity: 0,\n  strokeDasharray: affordableLinePathLength,\n  strokeDashoffset: affordableLinePathLength,\n});\n\ngsap\n  .timeline({\n    scrollTrigger: {\n      trigger: \".affordable-line\",\n      start: \"top 70%\",\n    },\n  })\n  .to(\".affordable-line\", {\n    opacity: 1,\n    duration: 0,\n  })\n  .to(\".affordable-line\", {\n    strokeDashoffset: 0,\n    duration: 1,\n  });\n\n// THE PROBLEM\nconst problemParagraph1chars = new SplitText(\".the-problem__paragraph--1\")\n  .chars;\nconst problemParagraph2chars = new SplitText(\".the-problem__paragraph--2\")\n  .chars;\n\ngsap.set(problemParagraph1chars, { opacity: 0.05 });\ngsap.set(problemParagraph2chars, { opacity: 0.05 });\n\ngsap\n  .timeline({\n    scrollTrigger: {\n      trigger: \".the-problem__text\",\n      start: \"top 50%\",\n      end: \"bottom 50%\",\n      scrub: 0.5,\n    },\n  })\n  .to(problemParagraph1chars, {\n    opacity: 1,\n    stagger: 0.01,\n  })\n  .to(problemParagraph2chars, {\n    opacity: 1,\n    stagger: 0.01,\n  });\n\n// METRICS\ngsap.set(gsap.utils.toArray(\".metrics__cards > li\"), {\n  opacity: 0,\n  y: 60,\n});\n\ngsap\n  .timeline({\n    scrollTrigger: {\n      trigger: \".metrics\",\n      endTrigger: \".metrics__cards\",\n      start: \"top center\",\n      end: \"bottom center\",\n      scrub: true,\n    },\n  })\n  .to(gsap.utils.toArray(\".metrics__cards > li\"), {\n    opacity: 1,\n    y: 0,\n    stagger: 0.1,\n  });\n\n// PROBLEM SOLUTION LINE\nconst problemSolutionLinePath = document.querySelector(\n  \".problem-solution-line-path\"\n);\nconst problemSolutionLinePathLength = problemSolutionLinePath.getTotalLength();\n\ngsap.set(problemSolutionLinePath, {\n  opacity: 0,\n  strokeDasharray: problemSolutionLinePathLength,\n  strokeDashoffset: problemSolutionLinePathLength,\n});\n\ngsap\n  .timeline({\n    scrollTrigger: {\n      trigger: problemSolutionLinePath,\n      start: \"top center\",\n      end: \"bottom center\",\n      scrub: true,\n    },\n  })\n  .to(problemSolutionLinePath, {\n    opacity: 1,\n    duration: 0,\n  })\n  .to(problemSolutionLinePath, {\n    strokeDashoffset: 0,\n  });\n\n// OUR SOLUTION\ngsap.set(gsap.utils.toArray(\".our-solution__cards > li\"), {\n  opacity: 0,\n  y: 60,\n});\n\ngsap\n  .timeline({\n    scrollTrigger: {\n      trigger: \".our-solution\",\n      endTrigger: \".our-solution__cards\",\n      start: \"top center\",\n      end: \"bottom center\",\n      scrub: true,\n    },\n  })\n  .to(gsap.utils.toArray(\".our-solution__cards > li\"), {\n    opacity: 1,\n    y: 0,\n    stagger: 0.1,\n  });\n","export class SplitText {\n  chars = [];\n\n  constructor(selector) {\n    const element = document.querySelector(selector);\n    const initialText = element.innerText.split(\"\");\n\n    element.innerText = \"\";\n\n    if (element) {\n      initialText.forEach((char) => {\n        const span = document.createElement(\"span\");\n        span.textContent = char;\n        span.style.display = \"inline-block\";\n\n        this.chars.push(span);\n        element.appendChild(span);\n      });\n    }\n  }\n}\n\n// export class SplitText2 {\n//   chars = [];\n//   words = [];\n//   lines = [];\n\n//   constructor(selector, { type }) {\n//     const element = document.querySelector(selector);\n//     const initialText = element.innerText;\n\n//     const types = type.split(\",\");\n\n//     element.innerText = \"\";\n\n//     if (types.includes(\"lines\")) {\n//       initialText.split(\"\\n\").forEach((line) => {\n//         const span = document.createElement(\"span\");\n//         span.textContent = line;\n//         span.style.display = \"block\";\n\n//         this.lines.push(span);\n//       });\n//     }\n\n//     // if (types.includes(\"words\")) {\n//     // }\n//   }\n// }\n"],"names":["$8af299d6ef1bf8bd$export$bd0fa428528371b2","chars","constructor","selector","element","document","querySelector","initialText","innerText","split","forEach","char","span","createElement","textContent","style","display","push","appendChild","gsap","registerPlugin","ScrollTrigger","$81cdcb03b6ee87e9$var$lenis","Lenis","lerp","requestAnimationFrame","$81cdcb03b6ee87e9$var$raf","time","raf","$81cdcb03b6ee87e9$var$housingWordChars","$81cdcb03b6ee87e9$var$heroTitleWords","set","yPercent","opacity","y","timeline","onStart","stop","onComplete","start","to","stagger","duration","ease","$81cdcb03b6ee87e9$var$affordableLinePathLength","$81cdcb03b6ee87e9$var$affordableLinePath","getTotalLength","strokeDasharray","strokeDashoffset","scrollTrigger","trigger","$81cdcb03b6ee87e9$var$problemParagraph1chars","$81cdcb03b6ee87e9$var$problemParagraph2chars","end","scrub","utils","toArray","endTrigger","$81cdcb03b6ee87e9$var$problemSolutionLinePath","$81cdcb03b6ee87e9$var$problemSolutionLinePathLength"],"version":3,"file":"index.15645e65.js.map"}