{"mappings":"AEAO,MAAM,EACX,MAAQ,EAAE,AAAC,AAEX,aAAY,CAAQ,CAAE,CACpB,IAAM,EAAU,SAAS,aAAa,CAAC,GACjC,EAAc,EAAQ,SAAS,CAAC,KAAK,CAAC,GAE5C,CAAA,EAAQ,SAAS,CAAG,GAEhB,GACF,EAAY,OAAO,CAAC,AAAC,IACnB,IAAM,EAAO,SAAS,aAAa,CAAC,OACpC,CAAA,EAAK,WAAW,CAAG,EAEnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAChB,EAAQ,WAAW,CAAC,EACtB,EAEJ,CACF,CDjBA,KAAK,cAAc,CAAC,eAIpB,MAAM,EAA2B,AADN,SAAS,aAAa,CAAC,2BACE,cAAc,GAElE,KAAK,GAAG,CAAC,mBAAoB,CAC3B,QAAS,EACT,gBAAiB,EACjB,iBAAkB,CACpB,GAEA,KACG,QAAQ,CAAC,CACR,cAAe,CACb,QAAS,mBACT,MAAO,SACT,CACF,GACC,EAAE,CAAC,mBAAoB,CACtB,QAAS,EACT,SAAU,CACZ,GACC,EAAE,CAAC,mBAAoB,CACtB,iBAAkB,EAClB,SAAU,CACZ,GAGF,MAAM,EAAyB,IAAI,EAAU,8BAC1C,KAAK,CACF,EAAyB,IAAI,EAAU,8BAC1C,KAAK,CAER,KAAK,GAAG,CAAC,EAAwB,CAAE,QAAS,GAAK,GACjD,KAAK,GAAG,CAAC,EAAwB,CAAE,QAAS,GAAK,GAEjD,KACG,QAAQ,CAAC,CACR,cAAe,CACb,QAAS,qBACT,MAAO,UACP,IAAK,aACL,MAAO,EACT,CACF,GACC,EAAE,CAAC,EAAwB,CAC1B,QAAS,EACT,QAAS,GACX,GACC,EAAE,CAAC,EAAwB,CAC1B,QAAS,EACT,QAAS,GACX,GAGF,KAAK,GAAG,CAAC,KAAK,KAAK,CAAC,OAAO,CAAC,wBAAyB,CACnD,QAAS,EACT,EAAG,EACL,GAEA,KACG,QAAQ,CAAC,CACR,cAAe,CACb,QAAS,WACT,WAAY,kBACZ,MAAO,aACP,IAAK,gBACL,MAAO,CAAA,CACT,CACF,GACC,EAAE,CAAC,KAAK,KAAK,CAAC,OAAO,CAAC,wBAAyB,CAC9C,QAAS,EACT,EAAG,EACH,QAAS,EACX,GAGF,MAAM,EAA0B,SAAS,aAAa,CACpD,+BAEI,EAAgC,EAAwB,cAAc,GAE5E,KAAK,GAAG,CAAC,EAAyB,CAChC,QAAS,EACT,gBAAiB,EACjB,iBAAkB,CACpB,GAEA,KACG,QAAQ,CAAC,CACR,cAAe,CACb,QAAS,EACT,MAAO,aACP,IAAK,gBACL,MAAO,CAAA,CACT,CACF,GACC,EAAE,CAAC,EAAyB,CAC3B,QAAS,EACT,SAAU,CACZ,GACC,EAAE,CAAC,EAAyB,CAC3B,iBAAkB,CACpB,GAGF,KAAK,GAAG,CAAC,KAAK,KAAK,CAAC,OAAO,CAAC,6BAA8B,CACxD,QAAS,EACT,EAAG,EACL,GAEA,KACG,QAAQ,CAAC,CACR,cAAe,CACb,QAAS,gBACT,WAAY,uBACZ,MAAO,aACP,IAAK,gBACL,MAAO,CAAA,CACT,CACF,GACC,EAAE,CAAC,KAAK,KAAK,CAAC,OAAO,CAAC,6BAA8B,CACnD,QAAS,EACT,EAAG,EACH,QAAS,EACX","sources":["<anon>","src/script.js","src/scripts/SplitText.js"],"sourcesContent":["class $c6a42191d3d08d3c$export$bd0fa428528371b2 {\n    chars = [];\n    constructor(selector){\n        const element = document.querySelector(selector);\n        const initialText = element.innerText.split(\"\");\n        element.innerText = \"\";\n        if (element) initialText.forEach((char)=>{\n            const span = document.createElement(\"span\");\n            span.textContent = char;\n            this.chars.push(span);\n            element.appendChild(span);\n        });\n    }\n}\n\n\ngsap.registerPlugin(ScrollTrigger);\n// AFFORDABLE\nconst $2aac3885343dc6b2$var$affordableLinePath = document.querySelector(\".affordable-line > path\");\nconst $2aac3885343dc6b2$var$affordableLinePathLength = $2aac3885343dc6b2$var$affordableLinePath.getTotalLength();\ngsap.set(\".affordable-line\", {\n    opacity: 0,\n    strokeDasharray: $2aac3885343dc6b2$var$affordableLinePathLength,\n    strokeDashoffset: $2aac3885343dc6b2$var$affordableLinePathLength\n});\ngsap.timeline({\n    scrollTrigger: {\n        trigger: \".affordable-line\",\n        start: \"top 70%\"\n    }\n}).to(\".affordable-line\", {\n    opacity: 1,\n    duration: 0\n}).to(\".affordable-line\", {\n    strokeDashoffset: 0,\n    duration: 1\n});\n// THE PROBLEM\nconst $2aac3885343dc6b2$var$problemParagraph1chars = new (0, $c6a42191d3d08d3c$export$bd0fa428528371b2)(\".the-problem__paragraph--1\").chars;\nconst $2aac3885343dc6b2$var$problemParagraph2chars = new (0, $c6a42191d3d08d3c$export$bd0fa428528371b2)(\".the-problem__paragraph--2\").chars;\ngsap.set($2aac3885343dc6b2$var$problemParagraph1chars, {\n    opacity: 0.05\n});\ngsap.set($2aac3885343dc6b2$var$problemParagraph2chars, {\n    opacity: 0.05\n});\ngsap.timeline({\n    scrollTrigger: {\n        trigger: \".the-problem__text\",\n        start: \"top 50%\",\n        end: \"bottom 50%\",\n        scrub: 0.5\n    }\n}).to($2aac3885343dc6b2$var$problemParagraph1chars, {\n    opacity: 1,\n    stagger: 0.01\n}).to($2aac3885343dc6b2$var$problemParagraph2chars, {\n    opacity: 1,\n    stagger: 0.01\n});\n// METRICS\ngsap.set(gsap.utils.toArray(\".metrics__cards > li\"), {\n    opacity: 0,\n    y: 60\n});\ngsap.timeline({\n    scrollTrigger: {\n        trigger: \".metrics\",\n        endTrigger: \".metrics__cards\",\n        start: \"top center\",\n        end: \"bottom center\",\n        scrub: true\n    }\n}).to(gsap.utils.toArray(\".metrics__cards > li\"), {\n    opacity: 1,\n    y: 0,\n    stagger: 0.1\n});\n// PROBLEM SOLUTION LINE\nconst $2aac3885343dc6b2$var$problemSolutionLinePath = document.querySelector(\".problem-solution-line-path\");\nconst $2aac3885343dc6b2$var$problemSolutionLinePathLength = $2aac3885343dc6b2$var$problemSolutionLinePath.getTotalLength();\ngsap.set($2aac3885343dc6b2$var$problemSolutionLinePath, {\n    opacity: 0,\n    strokeDasharray: $2aac3885343dc6b2$var$problemSolutionLinePathLength,\n    strokeDashoffset: $2aac3885343dc6b2$var$problemSolutionLinePathLength\n});\ngsap.timeline({\n    scrollTrigger: {\n        trigger: $2aac3885343dc6b2$var$problemSolutionLinePath,\n        start: \"top center\",\n        end: \"bottom center\",\n        scrub: true\n    }\n}).to($2aac3885343dc6b2$var$problemSolutionLinePath, {\n    opacity: 1,\n    duration: 0\n}).to($2aac3885343dc6b2$var$problemSolutionLinePath, {\n    strokeDashoffset: 0\n});\n// OUR SOLUTION\ngsap.set(gsap.utils.toArray(\".our-solution__cards > li\"), {\n    opacity: 0,\n    y: 60\n});\ngsap.timeline({\n    scrollTrigger: {\n        trigger: \".our-solution\",\n        endTrigger: \".our-solution__cards\",\n        start: \"top center\",\n        end: \"bottom center\",\n        scrub: true\n    }\n}).to(gsap.utils.toArray(\".our-solution__cards > li\"), {\n    opacity: 1,\n    y: 0,\n    stagger: 0.1\n});\n\n\n//# sourceMappingURL=index.31dcd597.js.map\n","import { SplitText } from \"./scripts/SplitText\";\n\ngsap.registerPlugin(ScrollTrigger);\n\n// AFFORDABLE\nconst affordableLinePath = document.querySelector(\".affordable-line > path\");\nconst affordableLinePathLength = affordableLinePath.getTotalLength();\n\ngsap.set(\".affordable-line\", {\n  opacity: 0,\n  strokeDasharray: affordableLinePathLength,\n  strokeDashoffset: affordableLinePathLength,\n});\n\ngsap\n  .timeline({\n    scrollTrigger: {\n      trigger: \".affordable-line\",\n      start: \"top 70%\",\n    },\n  })\n  .to(\".affordable-line\", {\n    opacity: 1,\n    duration: 0,\n  })\n  .to(\".affordable-line\", {\n    strokeDashoffset: 0,\n    duration: 1,\n  });\n\n// THE PROBLEM\nconst problemParagraph1chars = new SplitText(\".the-problem__paragraph--1\")\n  .chars;\nconst problemParagraph2chars = new SplitText(\".the-problem__paragraph--2\")\n  .chars;\n\ngsap.set(problemParagraph1chars, { opacity: 0.05 });\ngsap.set(problemParagraph2chars, { opacity: 0.05 });\n\ngsap\n  .timeline({\n    scrollTrigger: {\n      trigger: \".the-problem__text\",\n      start: \"top 50%\",\n      end: \"bottom 50%\",\n      scrub: 0.5,\n    },\n  })\n  .to(problemParagraph1chars, {\n    opacity: 1,\n    stagger: 0.01,\n  })\n  .to(problemParagraph2chars, {\n    opacity: 1,\n    stagger: 0.01,\n  });\n\n// METRICS\ngsap.set(gsap.utils.toArray(\".metrics__cards > li\"), {\n  opacity: 0,\n  y: 60,\n});\n\ngsap\n  .timeline({\n    scrollTrigger: {\n      trigger: \".metrics\",\n      endTrigger: \".metrics__cards\",\n      start: \"top center\",\n      end: \"bottom center\",\n      scrub: true,\n    },\n  })\n  .to(gsap.utils.toArray(\".metrics__cards > li\"), {\n    opacity: 1,\n    y: 0,\n    stagger: 0.1,\n  });\n\n// PROBLEM SOLUTION LINE\nconst problemSolutionLinePath = document.querySelector(\n  \".problem-solution-line-path\"\n);\nconst problemSolutionLinePathLength = problemSolutionLinePath.getTotalLength();\n\ngsap.set(problemSolutionLinePath, {\n  opacity: 0,\n  strokeDasharray: problemSolutionLinePathLength,\n  strokeDashoffset: problemSolutionLinePathLength,\n});\n\ngsap\n  .timeline({\n    scrollTrigger: {\n      trigger: problemSolutionLinePath,\n      start: \"top center\",\n      end: \"bottom center\",\n      scrub: true,\n    },\n  })\n  .to(problemSolutionLinePath, {\n    opacity: 1,\n    duration: 0,\n  })\n  .to(problemSolutionLinePath, {\n    strokeDashoffset: 0,\n  });\n\n// OUR SOLUTION\ngsap.set(gsap.utils.toArray(\".our-solution__cards > li\"), {\n  opacity: 0,\n  y: 60,\n});\n\ngsap\n  .timeline({\n    scrollTrigger: {\n      trigger: \".our-solution\",\n      endTrigger: \".our-solution__cards\",\n      start: \"top center\",\n      end: \"bottom center\",\n      scrub: true,\n    },\n  })\n  .to(gsap.utils.toArray(\".our-solution__cards > li\"), {\n    opacity: 1,\n    y: 0,\n    stagger: 0.1,\n  });\n","export class SplitText {\n  chars = [];\n\n  constructor(selector) {\n    const element = document.querySelector(selector);\n    const initialText = element.innerText.split(\"\");\n\n    element.innerText = \"\";\n\n    if (element) {\n      initialText.forEach((char) => {\n        const span = document.createElement(\"span\");\n        span.textContent = char;\n\n        this.chars.push(span);\n        element.appendChild(span);\n      });\n    }\n  }\n}\n"],"names":["$c6a42191d3d08d3c$export$bd0fa428528371b2","chars","constructor","selector","element","document","querySelector","initialText","innerText","split","forEach","char","span","createElement","textContent","push","appendChild","gsap","registerPlugin","ScrollTrigger","$2aac3885343dc6b2$var$affordableLinePathLength","$2aac3885343dc6b2$var$affordableLinePath","getTotalLength","set","opacity","strokeDasharray","strokeDashoffset","timeline","scrollTrigger","trigger","start","to","duration","$2aac3885343dc6b2$var$problemParagraph1chars","$2aac3885343dc6b2$var$problemParagraph2chars","end","scrub","stagger","utils","toArray","y","endTrigger","$2aac3885343dc6b2$var$problemSolutionLinePath","$2aac3885343dc6b2$var$problemSolutionLinePathLength"],"version":3,"file":"index.31dcd597.js.map"}